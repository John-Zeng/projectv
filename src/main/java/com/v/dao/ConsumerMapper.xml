<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.v.dao.ConsumerMapper" >
  <resultMap id="BaseResultMap" type="com.v.bean.Consumer" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <result column="pay_pwd" property="payPwd" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    username, pay_pwd, password, salt, email, telephone, gender, balance
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from consumer
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from consumer
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.v.bean.Consumer" >
    insert into consumer (username, pay_pwd, password, 
      salt, email, telephone, 
      gender, balance)
    values (#{username,jdbcType=VARCHAR}, #{payPwd,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{balance,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.v.bean.Consumer" >
    insert into consumer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="payPwd != null" >
        pay_pwd,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="balance != null" >
        balance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="payPwd != null" >
        #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.v.bean.Consumer" >
    update consumer
    <set >
      <if test="payPwd != null" >
        pay_pwd = #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DOUBLE},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.v.bean.Consumer" >
    update consumer
    set pay_pwd = #{payPwd,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      balance = #{balance,jdbcType=DOUBLE}
    where username = #{username,jdbcType=VARCHAR}
  </update>
  
  <select id="getAllComsumer" resultMap="BaseResultMap">
       select 
       <include refid="Base_Column_List" />
       from consumer 
  </select>
  
  <select id="genSalt" resultType="java.lang.String">
       select substring(sha1(rand()),1,10) as salt
  </select>
  
  <select id="genSaltedPwd" parameterType = "com.v.bean.Customer" resultType="java.lang.String">
      select sha1(concat(reverse(substring(#{salt, jdbcType=VARCHAR},3,6)), #{password, jdbcType=VARCHAR})) as 'salted hash PWD'
  </select>
  
  <select id="getUserByName" parameterType = "java.lang.String" resultMap = "BaseResultMap">
      select 
       <include refid="Base_Column_List" />
      from consumer where username = #{username}
  </select>
  
  <delete id="deleteConsumerByName" parameterType = "java.lang.String">
     delete from consumer where username = #{username}
  </delete>
   
</mapper>