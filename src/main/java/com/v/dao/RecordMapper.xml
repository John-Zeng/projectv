<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.v.dao.RecordMapper" >
  <resultMap id="BaseResultMap" type="com.v.bean.Record" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="r_id" property="rId" jdbcType="VARCHAR" />
    <result column="pd" property="pd" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="state" property="state" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.v.bean.RecordWithBLOBs" extends="BaseResultMap" >
    <result column="prcs" property="prcs" jdbcType="LONGVARCHAR" />
    <result column="mmry" property="mmry" jdbcType="LONGVARCHAR" />
    <result column="note" property="note" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, r_id, pd, price, state
  </sql>
  <sql id="Blob_Column_List" >
    prcs, mmry, note
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.v.bean.RecordWithBLOBs" >
    insert into record (id, r_id, pd, 
      price, state, prcs, 
      mmry, note)
    values (#{id,jdbcType=INTEGER}, #{rId,jdbcType=VARCHAR}, #{pd,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{state,jdbcType=TINYINT}, #{prcs,jdbcType=LONGVARCHAR}, 
      #{mmry,jdbcType=LONGVARCHAR}, #{note,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.v.bean.RecordWithBLOBs" >
    insert into record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rId != null" >
        r_id,
      </if>
      <if test="pd != null" >
        pd,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="prcs != null" >
        prcs,
      </if>
      <if test="mmry != null" >
        mmry,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rId != null" >
        #{rId,jdbcType=VARCHAR},
      </if>
      <if test="pd != null" >
        #{pd,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="prcs != null" >
        #{prcs,jdbcType=LONGVARCHAR},
      </if>
      <if test="mmry != null" >
        #{mmry,jdbcType=LONGVARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.v.bean.RecordWithBLOBs" >
    update record
    <set >
      <if test="rId != null" >
        r_id = #{rId,jdbcType=VARCHAR},
      </if>
      <if test="pd != null" >
        pd = #{pd,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="prcs != null" >
        prcs = #{prcs,jdbcType=LONGVARCHAR},
      </if>
      <if test="mmry != null" >
        mmry = #{mmry,jdbcType=LONGVARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.v.bean.RecordWithBLOBs" >
    update record
    set r_id = #{rId,jdbcType=VARCHAR},
      pd = #{pd,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      state = #{state,jdbcType=TINYINT},
      prcs = #{prcs,jdbcType=LONGVARCHAR},
      mmry = #{mmry,jdbcType=LONGVARCHAR},
      note = #{note,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.v.bean.Record" >
    update record
    set r_id = #{rId,jdbcType=VARCHAR},
      pd = #{pd,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getInBag" parameterType="java.lang.String" resultMap = "ResultMapWithBLOBs">
     select 
      r.r_id r_id, r.pd pd, r.prcs prcs, r.mmry mmry, 
      r.price price, r.note note, r.state state 
     from bag,record r where bag.username = #{username,jdbcType=VARCHAR} and bag.r_id = r.r_id;
  </select>
  
  <select id="getRecordById" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
      select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from record
    where  r_id= #{rId,jdbcType=INTEGER}
  </select>
</mapper>